org: cuevacelis
app: aws-node-express-dynamodb-api-project
service: aws-node-express-dynamodb-api-project
frameworkVersion: "3"

custom:
  tableNamePeople: "people-table-${sls:stage}"
  dynamodb:
    stages:
      - dev
      - test

provider:
  timeout: 50
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [PeoplesTable, Arn]
  environment:
    PEOPLE_TABLE: ${self:custom.tableNamePeople}

functions:
  getPeople:
    name: "getPeople"
    description: Get data on star wars actors
    handler: src/controllers/peopleController.getPeople
    events:
      - httpApi:
          path: /api/people
          method: get
      - httpApi:
          path: /api/people/{id}
          method: get
  createPeople:
    name: "createPeople"
    description: Create new star wars actors
    handler: src/controllers/peopleController.createPeople
    events:
      - httpApi:
          path: /api/people
          method: post
  updatePeople:
    name: "updatePeople"
    description: Update star wars actors
    handler: src/controllers/peopleController.updatePeople
    events:
      - httpApi:
          path: /api/people/{id}
          method: patch
  deletePeople:
    name: "deletePeople"
    description: Delete star wars actors
    handler: src/controllers/peopleController.deletePeople
    events:
      - httpApi:
          path: /api/people/{id}
          method: delete

resources:
  Resources:
    PeoplesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: peopleId
            AttributeType: S
        KeySchema:
          - AttributeName: peopleId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableNamePeople}

plugins:
  - serverless-dynamodb
  - serverless-offline
